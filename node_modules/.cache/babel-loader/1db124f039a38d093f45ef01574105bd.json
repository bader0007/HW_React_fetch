{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\HW_React_fetch1\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './css/style.css'; // components \n\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport Error from './components/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"3f5a8d36d96c810dabf652d54a0d110f\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      city: 'cairo',\n      country: 'egypt',\n      icon: '',\n      temp: 0,\n      temp_min: 0,\n      temp_max: 0,\n      description: '',\n      status: false,\n      error: false\n    };\n\n    this.getData = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n      const data = await response.json(); // console.log(response)\n\n      if (response.status == 200) {\n        this.setState({\n          city: city,\n          country: country,\n          temp: this.convertToSilsious(data.main.temp),\n          temp_min: this.convertToSilsious(data.main.temp_min),\n          temp_max: this.convertToSilsious(data.main.temp_max),\n          description: data.weather[0].description,\n          icon: data.weather[0].icon,\n          status: true,\n          error: false\n        });\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.convertToSilsious = temp => {\n      return Math.floor(temp - 273.15);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        getData: this.getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), this.state.error ? /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 31\n      }, this) : '', this.state.status ? /*#__PURE__*/_jsxDEV(Weather, {\n        data: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 32\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/DELL/Documents/GitHub/HW_React_fetch1/src/App.js"],"names":["React","Component","Form","Weather","Error","API_KEY","App","state","city","country","icon","temp","temp_min","temp_max","description","status","error","getData","e","preventDefault","target","elements","value","response","fetch","data","json","setState","convertToSilsious","main","weather","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,iBAAP,C,CAGA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAGzBM,KAHyB,GAGjB;AACNC,MAAAA,IAAI,EAAC,OADC;AAENC,MAAAA,OAAO,EAAC,OAFF;AAGNC,MAAAA,IAAI,EAAC,EAHC;AAINC,MAAAA,IAAI,EAAC,CAJC;AAKNC,MAAAA,QAAQ,EAAC,CALH;AAMNC,MAAAA,QAAQ,EAAC,CANH;AAONC,MAAAA,WAAW,EAAC,EAPN;AAQNC,MAAAA,MAAM,EAAC,KARD;AASNC,MAAAA,KAAK,EAAC;AATA,KAHiB;;AAAA,SAiBzBC,OAjByB,GAiBf,MAAOC,CAAP,IAAW;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMX,IAAI,GAAGU,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBb,IAAlB,CAAuBc,KAApC;AACA,YAAMb,OAAO,GAAGS,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBZ,OAAlB,CAA0Ba,KAA1C;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDhB,IAAK,IAAGC,OAAQ,UAASJ,OAAQ,EAAvF,CAA5B;AACA,YAAMoB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CANmB,CAOnB;;AACA,UAAGH,QAAQ,CAACR,MAAT,IAAmB,GAAtB,EACA;AACE,aAAKY,QAAL,CAAc;AACZnB,UAAAA,IAAI,EAACA,IADO;AAEZC,UAAAA,OAAO,EAACA,OAFI;AAGZE,UAAAA,IAAI,EAAC,KAAKiB,iBAAL,CAAuBH,IAAI,CAACI,IAAL,CAAUlB,IAAjC,CAHO;AAIZC,UAAAA,QAAQ,EAAC,KAAKgB,iBAAL,CAAuBH,IAAI,CAACI,IAAL,CAAUjB,QAAjC,CAJG;AAKZC,UAAAA,QAAQ,EAAC,KAAKe,iBAAL,CAAuBH,IAAI,CAACI,IAAL,CAAUhB,QAAjC,CALG;AAMZC,UAAAA,WAAW,EAACW,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBhB,WANhB;AAOZJ,UAAAA,IAAI,EAACe,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBpB,IAPT;AAQZK,UAAAA,MAAM,EAAC,IARK;AASZC,UAAAA,KAAK,EAAC;AATM,SAAd;AAYD,OAdD,MAgBA;AACI,aAAKW,QAAL,CAAc;AAACX,UAAAA,KAAK,EAAC;AAAP,SAAd;AACH;AAKF,KAhDwB;;AAAA,SAmDzBY,iBAnDyB,GAmDJjB,IAAD,IAAQ;AAC1B,aAAOoB,IAAI,CAACC,KAAL,CAAWrB,IAAI,GAAG,MAAlB,CAAP;AACD,KArDwB;AAAA;;AAuDzBsB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACE,QAAC,IAAD;AAAO,QAAA,OAAO,EAAE,KAAKhB;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,EAEI,KAAKV,KAAL,CAAWS,KAAX,gBAAoB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAApB,GAA+B,EAFnC,EAGI,KAAKT,KAAL,CAAWQ,MAAX,gBAAqB,QAAC,OAAD;AAAU,QAAA,IAAI,EAAE,KAAKR;AAArB;AAAA;AAAA;AAAA;AAAA,cAArB,GAAsD,EAH1D;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA/DwB;;AAoE3B,eAAeD,GAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport './css/style.css'\r\n\r\n\r\n// components \r\nimport Form from './components/Form';\r\nimport Weather from './components/Weather';\r\nimport Error from './components/Error';\r\n\r\nconst API_KEY = \"3f5a8d36d96c810dabf652d54a0d110f\"\r\n\r\nclass App extends Component{\r\n\r\n\r\n  state = {\r\n    city:'cairo',\r\n    country:'egypt',\r\n    icon:'',\r\n    temp:0,\r\n    temp_min:0,\r\n    temp_max:0,\r\n    description:'',\r\n    status:false,\r\n    error:false,\r\n  }\r\n\r\n\r\n\r\n  getData = async (e)=>{\r\n    e.preventDefault();\r\n    const city = e.target.elements.city.value;\r\n    const country = e.target.elements.country.value;\r\n\r\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`)\r\n    const data = await response.json()\r\n    // console.log(response)\r\n    if(response.status == 200)\r\n    {\r\n      this.setState({\r\n        city:city,\r\n        country:country,\r\n        temp:this.convertToSilsious(data.main.temp),\r\n        temp_min:this.convertToSilsious(data.main.temp_min),\r\n        temp_max:this.convertToSilsious(data.main.temp_max),\r\n        description:data.weather[0].description,\r\n        icon:data.weather[0].icon,\r\n        status:true,\r\n        error:false\r\n  \r\n      })\r\n    }\r\n    else \r\n    {\r\n        this.setState({error:true})\r\n    }\r\n\r\n\r\n    \r\n    \r\n  }\r\n\r\n\r\n  convertToSilsious = (temp)=>{\r\n    return Math.floor(temp - 273.15)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Form  getData={this.getData} />\r\n         {this.state.error  ? <Error/> : '' }\r\n         {this.state.status  ? <Weather  data={this.state} /> : '' }\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}